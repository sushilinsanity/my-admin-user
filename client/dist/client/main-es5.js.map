{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/login-register/login-register.component.ts","webpack:///src/app/components/login-register/login-register.component.html","webpack:///src/app/components/login-register/login/login.component.ts","webpack:///src/app/components/login-register/login/login.component.html","webpack:///src/app/components/login-register/register/register.component.ts","webpack:///src/app/components/login-register/register/register.component.html","webpack:///src/app/components/shared/api/api.helper.ts","webpack:///src/app/components/shared/api/api.services.ts","webpack:///src/app/components/shared/guard/admin-guard.service.ts","webpack:///src/app/components/shared/guard/auth-guard.service.ts","webpack:///src/app/components/shared/guard/sections-guard.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","loadChildren","m","DashboardModule","canActivate","AppRoutingModule","forRoot","imports","AppComponent","_apiHelper","isLoading","subscribe","response","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdminComponent","_apiServices","_messageService","_router","rolesData","faChevronLeft","roles","getUsers","getAllUsers","users","map","user","activeRoles","toString","split","forEach","role","push","label","value","err","handleError","payload","_id","next","updateUserRoles","add","severity","summary","detail","error","navigate","navigateToDashboard","HeaderComponent","faUser","faUserShield","faSignOutAlt","userData","isAdmin","name","loginRegister","LoginRegisterComponent","LoginComponent","_apiService","loginForm","email","compose","required","pattern","password","minLength","loginUser","clearForm","reset","onLogin","goToRegister","RegisterComponent","registerForm","username","registerUser","console","log","onRegister","goToLogin","ApiHelper","sections","title","body","url","ApiServices","http","post","get","data","providedIn","AdminGuardService","messageService","route","state","AuthGuardService","accessDenied","SectionsGuardService","_route","isThere","find","routeConfig","environment","production","baseUri","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginRegisterComponent } from './components/login-register/login-register.component';\nimport { AuthGuardService } from './components/shared/guard/auth-guard.service';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { AdminGuardService } from './components/shared/guard/admin-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: LoginRegisterComponent, pathMatch: 'full' },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./components/dashboard/dashboard.module').then(m => m.DashboardModule), canActivate: [AuthGuardService]\n\n  },\n  { path: 'admin', component: AdminComponent, canActivate: [AdminGuardService] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiHelper } from './components/shared/api/api.helper';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  \n  isLoading: boolean;\n\n  constructor(private _apiHelper: ApiHelper) { }\n\n  ngOnInit() {\n    this._apiHelper.isLoading.subscribe(response => this.isLoading = response);\n  }\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<p-toast></p-toast>\r\n<p-progressSpinner *ngIf=\"isLoading\"></p-progressSpinner>\r\n<p-blockUI [blocked]=\"isLoading\"></p-blockUI>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// components\nimport { AppComponent } from './app.component';\nimport { LoginRegisterComponent } from './components/login-register/login-register.component';\nimport { RegisterComponent } from './components/login-register/register/register.component';\nimport { LoginComponent } from './components/login-register/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { AdminComponent } from './components/admin/admin.component';\n\n// api-services\nimport { ApiServices } from './components/shared/api/api.services';\nimport { ApiHelper } from './components/shared/api/api.helper';\n\n// routing\nimport { AppRoutingModule } from './app-routing.module';\n\n// auth guard\nimport { AuthGuardService } from './components/shared/guard/auth-guard.service';\nimport { AdminGuardService } from './components/shared/guard/admin-guard.service';\n\n// fontawesome\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n// primeng\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { SectionsGuardService } from './components/shared/guard/sections-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    LoginRegisterComponent,\n    HeaderComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    TooltipModule,\n    ToastModule,\n    MultiSelectModule,\n    ProgressSpinnerModule,\n    BlockUIModule\n  ],\n  providers: [ApiServices, ApiHelper, MessageService, AuthGuardService, AdminGuardService, SectionsGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiServices } from '../shared/api/api.services';\nimport { MessageService } from 'primeng/api';\n\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { User } from '../shared/model/User';\nimport { ApiHelper } from '../shared/api/api.helper';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  users: any[];\n  rolesData = [];\n  faChevronLeft = faChevronLeft;\n\n  constructor(private _apiServices: ApiServices, private _apiHelper: ApiHelper, private _messageService: MessageService, private _router: Router) { }\n\n  ngOnInit(): void {\n    this.rolesData = this._apiHelper.roles;\n    this.getUsers();\n  }\n\n  getUsers(): void {\n    this._apiServices.getAllUsers()\n      .subscribe((response: User[]) => {\n        this.users = response;\n\n        this.users = this.users.map(user => {\n          const activeRoles = [];\n          user.roles.toString().split(',').forEach((role: string) => {\n            activeRoles.push({ label: role, value: role });\n          })\n          user.activeRoles = activeRoles;\n          return user;\n        })\n      }, (err) => {\n        this.handleError(err);\n      });\n  }\n\n  saveUserRoles(user): void {\n    let payload = { id: user._id, roles: [] };\n    const roles = [];\n    user.activeRoles.forEach(role => {\n      roles.push(role.value);\n    })\n    payload.roles = roles;\n\n    this._apiHelper.isLoading.next(true);\n    this._apiServices.updateUserRoles(payload)\n      .subscribe(response => {\n        this._apiHelper.isLoading.next(false);\n        this._messageService.add({ severity: 'success', summary: 'Roles updated successfully', detail: '' })\n        this.getUsers();\n      }, (err) => {\n        this.handleError(err);\n      });\n  }\n\n  handleError(err): void {\n    this._apiHelper.isLoading.next(false);\n    this._messageService.add({ severity: 'error', summary: err.error.error, detail: '' })\n  }\n\n  navigateToDashboard() {\n    this._router.navigate(['dashboard/section']);\n  }\n}\n","<div class=\"col-sm-6 offset-sm-3\">\n  <h6 class=\"mt-4\">List of registered users</h6>\n  <div>\n    <div class=\"list-group\" *ngIf=\"users?.length\">\n      <div class=\"list-group-item d-flex\" *ngFor=\"let user of users\">\n        <div class=\"col-sm-6\">\n          <div><span class=\"label-header\">Username:</span><span class=\"label-text\">{{user.name}}</span></div>\n          <div><span class=\"label-header\">Email:</span><span class=\"label-text\">{{user.email}}</span></div>\n        </div>\n        <div class=\"col-sm-6\" *ngIf=\"user?.isAdmin\"><span class=\"label-text\">User is an Admin</span></div>\n        <div class=\"col-sm-6\" *ngIf=\"!user?.isAdmin\">\n          <div>\n            <span class=\"label-header\">Active Roles:</span><span class=\"label-text\">{{user?.roles}}</span>\n          </div>\n          <span class=\"label-header\">Available Roles:</span><span>\n            <p-multiSelect [options]=\"rolesData\" [(ngModel)]=\"user.activeRoles\" optionLabel=\"value\"></p-multiSelect>\n            <button class=\"btn btn-sm btn-save btn-primary\" pTooltip=\"Save user roles\" (click)=\"saveUserRoles(user)\">Save</button>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"dashboard-button\">\n  <button class=\"btn bnt-sm btn-primary\" pTooltip=\"Go to dashboard\" (click)=\"navigateToDashboard()\"><fa-icon [icon]=\"faChevronLeft\"></fa-icon></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\n\nimport { faUser, faUserShield, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { User } from '../shared/model/User';\nimport { ApiHelper } from '../shared/api/api.helper';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  userData: User;\n  faUser = faUser;\n  faUserShield = faUserShield;\n  faSignOutAlt = faSignOutAlt;\n\n  constructor(private _apiHelper: ApiHelper, private _messageService: MessageService, private _router: Router) { }\n\n  ngOnInit(): void {\n    this._apiHelper.userData.subscribe((response: User) => {\n      this.userData = response;\n      if (this.userData.isAdmin) {\n        this._messageService.add({severity:'success', summary:`Welcome ${response.name}`, detail:'Admin features are activated for you'});\n      } else if (this.userData.name) {\n        this._messageService.add({severity:'success', summary:`Welcome ${response.name}`, detail:''});\n      }\n    });\n  }\n\n  navigateToAdminPage() {\n    this._router.navigate(['admin']);\n  }\n\n  onSignOut() {\n    this._apiHelper.userData.next({});\n    this._apiHelper.loginRegister.next('login');\n    this._router.navigate(['']);\n    this._messageService.add({ severity: 'success', summary: 'Logged out successfully', detail: '' })\n  }\n}\n","<nav class=\"navbar px-4\">\n  <div class=\"col-sm-6\">\n    <a class=\"navbar-brand\">My Admin User</a>\n  </div>\n  <div class=\"col-sm-6 info-wrapper\">\n    <div *ngIf=\"userData?.name && userData?.isAdmin\" class=\"option-admin-area\" (click)=\"navigateToAdminPage()\">Admin\n      Area</div>\n    <fa-icon *ngIf=\"userData?.name && userData?.isAdmin\" class=\"user-icon\" [icon]=\"faUserShield\"\n      pTooltip=\"{{userData?.name}}\"></fa-icon>\n    <fa-icon *ngIf=\"userData?.name && !userData?.isAdmin\" class=\"user-icon\" [icon]=\"faUser\"\n      pTooltip=\"{{userData?.name}}\"></fa-icon>\n    <fa-icon *ngIf=\"userData?.name\" class=\"user-icon\" [icon]=\"faSignOutAlt\" pTooltip=\"Logout\" (click)=\"onSignOut()\"></fa-icon>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { ApiHelper } from '../shared/api/api.helper';\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss']\n})\nexport class LoginRegisterComponent implements OnInit {\n\n  loginRegister: string;\n\n  constructor(private _apiHelper: ApiHelper) { }\n\n  ngOnInit(): void {\n    this._apiHelper.loginRegister.subscribe(response => {\n      this.loginRegister = response;\n    })\n  }\n\n}\n","<div class=\"container mt-3\">\n  <div class=\"col-sm-6 offset-sm-3\">\n    <div class=\"text-center mb-5\">\n      <h4>Login/Register to continue</h4>\n    </div>\n    <app-login *ngIf=\"loginRegister === 'login'\"></app-login>\n    <app-register *ngIf=\"loginRegister === 'register'\"></app-register>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../shared/model/User';\nimport { ApiServices } from '../../shared/api/api.services';\nimport { ApiHelper } from '../../shared/api/api.helper';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  showError: boolean;\n  errorMessage: string;\n\n  constructor(private _apiService: ApiServices, private _apiHelper: ApiHelper, private _router: Router, private _messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')])),\n      password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(5)]))\n    })\n  }\n\n  onLogin() {\n    this._apiHelper.isLoading.next(true);\n    this._apiService.loginUser(this.loginForm.value)\n      .subscribe((response: User) => {\n        this._apiHelper.isLoading.next(false);\n        if (response._id) {\n          this._apiHelper.userData.next(response);\n          this._router.navigate(['/dashboard/section']);\n        }\n      }, (err) => {\n        this._apiHelper.isLoading.next(false);\n        this._messageService.add({severity:'error', summary:err.error.error, detail:''});\n        this.clearForm();\n      });\n  }\n\n  clearForm() {\n    this.loginForm.reset();\n  }\n\n  goToRegister() {\n    this._apiHelper.loginRegister.next('register');\n  }\n}\n","<form [formGroup]=\"loginForm\">\n  <div class=\"form-group\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" class=\"form-control\" placeholder=\"Enter email...\" formControlName=\"email\"\n      [ngClass]=\"{'invalid-control': loginForm.get('email')?.touched && loginForm.get('email')?.invalid}\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" class=\"form-control\" placeholder=\"Enter password...\" formControlName=\"password\"\n      [ngClass]=\"{'invalid-control': loginForm.get('password')?.touched && loginForm.get('password')?.invalid}\">\n  </div>\n  <div class=\"btn-wrapper\">\n    <div class=\"col-sm-8 px-0\">\n      <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\" (click)=\"onLogin()\">Login</button>\n      <button type=\"button\" class=\"btn btn-secondary ml-2\" (click)=\"clearForm()\">Cancel</button>\n    </div>\n    <div class=\"col-sm-4 px-0 text-right\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToRegister()\">Register</button>\n    </div>\n  </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../shared/model/User';\nimport { ApiServices } from '../../shared/api/api.services';\nimport { ApiHelper } from '../../shared/api/api.helper';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  showError: boolean;\n  errorMessage: string;\n\n  constructor(private _apiService: ApiServices, private _apiHelper: ApiHelper, private _router: Router, private _messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')])),\n      password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(5)]))\n    })\n  }\n\n  onRegister() {\n    this._apiService.registerUser(this.registerForm.value)\n      .subscribe((response: User) => {\n        console.log(response);\n        if (response._id) {\n          this._apiHelper.userData.next(response);\n          this._router.navigate(['/dashboard/section']);\n        }\n      }, (err) => {\n        this._messageService.add({severity:'error', summary:err.error.error, detail:''});\n        this.clearForm();\n      });\n  }\n\n  clearForm() {\n    this.registerForm.reset();\n  }\n\n  goToLogin() {\n    this._apiHelper.loginRegister.next('login');\n  }\n}\n","<form [formGroup]=\"registerForm\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Enter username...\" formControlName=\"username\"\n      [ngClass]=\"{'invalid-control': registerForm.get('username')?.touched && registerForm.get('username')?.invalid}\">\n    <span *ngIf=\"registerForm.get('username')?.touched && registerForm.get('username')?.invalid\" class=\"invalid-msg\">\n      Username is required\n    </span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" class=\"form-control\" placeholder=\"Enter email...\" formControlName=\"email\"\n      [ngClass]=\"{'invalid-control': registerForm.get('email')?.touched && registerForm.get('email')?.invalid}\">\n    <span *ngIf=\"registerForm.get('email')?.touched && registerForm.get('email')?.invalid\" class=\"invalid-msg\">\n      Valid email address is required</span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" class=\"form-control\" placeholder=\"Enter password...\" formControlName=\"password\"\n      [ngClass]=\"{'invalid-control': registerForm.get('password')?.touched && registerForm.get('password')?.invalid}\">\n    <span *ngIf=\"registerForm.get('password')?.touched && registerForm.get('password')?.invalid\" class=\"invalid-msg\">\n      Password must be atleast 5 characters long</span>\n  </div>\n  <div class=\"btn-wrapper\">\n    <div class=\"col-sm-8 px-0\">\n      <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\" (click)=\"onRegister()\">Register</button>\n      <button type=\"button\" class=\"btn btn-secondary ml-2\" (click)=\"clearForm()\">Cancel</button>\n    </div>\n    <div class=\"col-sm-4 px-0 text-right\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToLogin()\">Login</button>\n    </div>\n  </div>\n</form>\n<div *ngIf=\"showError\" class=\"alert alert-danger mt-3\" role=\"alert\">\n  {{errorMessage}}\n</div>","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport class ApiHelper {\r\n  userData: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  loginRegister: BehaviorSubject<string> = new BehaviorSubject<string>('login');\r\n  isLoading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  sections = [\r\n    { title: 'Anime', body: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium officia in corporis excepturi necessitatibus tempora reiciendis saepe blanditiis voluptate iure.', url: 'anime' },\r\n    { title: 'Games', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, id vel officiis harum voluptatibus velit veniam adipisci? Id, dolorem cum.', url: 'games' },\r\n    { title: 'Music', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'music' },\r\n    { title: 'Books', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'books' },\r\n    { title: 'Movies', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'movies' },\r\n    { title: 'Others', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'others' },\r\n  ];\r\n\r\n  roles = [\r\n    { label: 'anime', value: 'anime' },\r\n    { label: 'games', value: 'games' },\r\n    { label: 'music', value: 'music' },\r\n    { label: 'books', value: 'books' },\r\n    { label: 'movies', value: 'movies' },\r\n    { label: 'others', value: 'others' },\r\n  ];\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiServices {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(userData) {\r\n    return this.http.post('/user/register', userData);\r\n  }\r\n\r\n  loginUser(userData) {\r\n    return this.http.post('/user/login', userData);\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get('/user/all-users');\r\n  }\r\n\r\n  updateUserRoles(data) {\r\n    return this.http.post('/user/add-user-role', data);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { User } from '../model/User';\r\nimport { ApiHelper } from '../api/api.helper';\r\n\r\n@Injectable()\r\nexport class AdminGuardService implements CanActivate {\r\n  userData: User;\r\n\r\n  constructor(private _router: Router, private _apiHelper: ApiHelper, private messageService: MessageService) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    this._apiHelper.userData.subscribe(response => {\r\n      this.userData = response;\r\n    }, (err) => {\r\n      this._router.navigate(['']);\r\n      this.messageService.add({severity:'error', summary:'Access Denied', detail:'Please login again.'})\r\n    })\r\n    \r\n    if (this.userData.isAdmin) {\r\n      return true;\r\n    }\r\n    this._router.navigate(['']);\r\n    this.messageService.add({severity:'error', summary:'Access Denied', detail:'Please login again.'})\r\n    return false;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { User } from '../model/User';\r\nimport { ApiHelper } from '../api/api.helper';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  userData: User;\r\n\r\n  constructor(private _router: Router, private _apiHelper: ApiHelper, private messageService: MessageService) {\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    this._apiHelper.userData.subscribe(response => {\r\n      this.userData = response;\r\n    }, (err) => {\r\n      this.accessDenied();\r\n    })\r\n\r\n    if (this.userData.name) {\r\n      return true;\r\n    }\r\n    this.accessDenied();\r\n    return false;\r\n  }\r\n\r\n  accessDenied(): void {\r\n    this._router.navigate(['']);\r\n    this.messageService.add({ severity: 'error', summary: 'Access Denied', detail: 'Please login again.' })\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { User } from '../model/User';\r\nimport { ApiHelper } from '../api/api.helper';\r\n\r\n@Injectable()\r\nexport class SectionsGuardService implements CanActivate {\r\n  userData: User;\r\n\r\n  constructor(private _router: Router, private _apiHelper: ApiHelper, private messageService: MessageService) {\r\n  }\r\n\r\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    this._apiHelper.userData.subscribe(response => {\r\n      this.userData = response;\r\n    }, (err) => {\r\n      this._router.navigate(['']);\r\n      this.accessDenied();\r\n    });\r\n\r\n    if (this.userData.isAdmin) {\r\n      return true;\r\n    } else if (this.userData.name) {\r\n      const isThere = this.userData.roles.find(role => _route.routeConfig.path === role);\r\n      if (isThere) {\r\n        return true;\r\n      }\r\n      this.accessDenied();\r\n      return false;\r\n    }\r\n    this.accessDenied();\r\n    return false;\r\n  }\r\n\r\n  accessDenied() {\r\n    this.messageService.add({ severity: 'error', summary: 'Access Denied', detail: 'Please login again.' })\r\n  }\r\n}","export const environment = {\n  production: false,\n  baseUri: 'http://localhost:3000',\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}