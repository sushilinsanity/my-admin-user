{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login-register/login-register.component.ts","./src/app/components/login-register/login-register.component.html","./src/app/components/login-register/login/login.component.ts","./src/app/components/login-register/login/login.component.html","./src/app/components/login-register/register/register.component.ts","./src/app/components/login-register/register/register.component.html","./src/app/components/shared/api/api.helper.ts","./src/app/components/shared/api/api.services.ts","./src/app/components/shared/guard/admin-guard.service.ts","./src/app/components/shared/guard/auth-guard.service.ts","./src/app/components/shared/guard/sections-guard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginRegisterComponent } from './components/login-register/login-register.component';\nimport { AuthGuardService } from './components/shared/guard/auth-guard.service';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { AdminGuardService } from './components/shared/guard/admin-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: LoginRegisterComponent, pathMatch: 'full' },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./components/dashboard/dashboard.module').then(m => m.DashboardModule), canActivate: [AuthGuardService]\n\n  },\n  { path: 'admin', component: AdminComponent, canActivate: [AdminGuardService] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ApiHelper } from './components/shared/api/api.helper';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  \n  isLoading: boolean;\n\n  constructor(private _apiHelper: ApiHelper) { }\n\n  ngOnInit() {\n    this._apiHelper.isLoading.subscribe(response => this.isLoading = response);\n  }\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<p-toast></p-toast>\r\n<p-progressSpinner *ngIf=\"isLoading\"></p-progressSpinner>\r\n<p-blockUI [blocked]=\"isLoading\"></p-blockUI>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// components\nimport { AppComponent } from './app.component';\nimport { LoginRegisterComponent } from './components/login-register/login-register.component';\nimport { RegisterComponent } from './components/login-register/register/register.component';\nimport { LoginComponent } from './components/login-register/login/login.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { AdminComponent } from './components/admin/admin.component';\n\n// api-services\nimport { ApiServices } from './components/shared/api/api.services';\nimport { ApiHelper } from './components/shared/api/api.helper';\n\n// routing\nimport { AppRoutingModule } from './app-routing.module';\n\n// auth guard\nimport { AuthGuardService } from './components/shared/guard/auth-guard.service';\nimport { AdminGuardService } from './components/shared/guard/admin-guard.service';\n\n// fontawesome\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n// primeng\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { BlockUIModule } from 'primeng/blockui';\nimport { SectionsGuardService } from './components/shared/guard/sections-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    LoginRegisterComponent,\n    HeaderComponent,\n    AdminComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    TooltipModule,\n    ToastModule,\n    MultiSelectModule,\n    ProgressSpinnerModule,\n    BlockUIModule\n  ],\n  providers: [ApiServices, ApiHelper, MessageService, AuthGuardService, AdminGuardService, SectionsGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiServices } from '../shared/api/api.services';\nimport { MessageService } from 'primeng/api';\n\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\n\nimport { User } from '../shared/model/User';\nimport { ApiHelper } from '../shared/api/api.helper';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  users: any[];\n  rolesData = [];\n  faChevronLeft = faChevronLeft;\n\n  constructor(private _apiServices: ApiServices, private _apiHelper: ApiHelper, private _messageService: MessageService, private _router: Router) { }\n\n  ngOnInit(): void {\n    this.rolesData = this._apiHelper.roles;\n    this.getUsers();\n  }\n\n  getUsers(): void {\n    this._apiServices.getAllUsers()\n      .subscribe((response: User[]) => {\n        this.users = response;\n\n        this.users = this.users.map(user => {\n          const activeRoles = [];\n          user.roles.toString().split(',').forEach((role: string) => {\n            activeRoles.push({ label: role, value: role });\n          })\n          user.activeRoles = activeRoles;\n          return user;\n        })\n      }, (err) => {\n        this.handleError(err);\n      });\n  }\n\n  saveUserRoles(user): void {\n    let payload = { id: user._id, roles: [] };\n    const roles = [];\n    user.activeRoles.forEach(role => {\n      roles.push(role.value);\n    })\n    payload.roles = roles;\n\n    this._apiHelper.isLoading.next(true);\n    this._apiServices.updateUserRoles(payload)\n      .subscribe(response => {\n        this._apiHelper.isLoading.next(false);\n        this._messageService.add({ severity: 'success', summary: 'Roles updated successfully', detail: '' })\n        this.getUsers();\n      }, (err) => {\n        this.handleError(err);\n      });\n  }\n\n  handleError(err): void {\n    this._apiHelper.isLoading.next(false);\n    this._messageService.add({ severity: 'error', summary: err.error.error, detail: '' })\n  }\n\n  navigateToDashboard() {\n    this._router.navigate(['dashboard/section']);\n  }\n}\n","<div class=\"col-sm-6 offset-sm-3\">\n  <h6 class=\"mt-4\">List of registered users</h6>\n  <div>\n    <div class=\"list-group\" *ngIf=\"users?.length\">\n      <div class=\"list-group-item d-flex\" *ngFor=\"let user of users\">\n        <div class=\"col-sm-6\">\n          <div><span class=\"label-header\">Username:</span><span class=\"label-text\">{{user.name}}</span></div>\n          <div><span class=\"label-header\">Email:</span><span class=\"label-text\">{{user.email}}</span></div>\n        </div>\n        <div class=\"col-sm-6\" *ngIf=\"user?.isAdmin\"><span class=\"label-text\">User is an Admin</span></div>\n        <div class=\"col-sm-6\" *ngIf=\"!user?.isAdmin\">\n          <div>\n            <span class=\"label-header\">Active Roles:</span><span class=\"label-text\">{{user?.roles}}</span>\n          </div>\n          <span class=\"label-header\">Available Roles:</span><span>\n            <p-multiSelect [options]=\"rolesData\" [(ngModel)]=\"user.activeRoles\" optionLabel=\"value\"></p-multiSelect>\n            <button class=\"btn btn-sm btn-save btn-primary\" pTooltip=\"Save user roles\" (click)=\"saveUserRoles(user)\">Save</button>\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"dashboard-button\">\n  <button class=\"btn bnt-sm btn-primary\" pTooltip=\"Go to dashboard\" (click)=\"navigateToDashboard()\"><fa-icon [icon]=\"faChevronLeft\"></fa-icon></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\n\nimport { faUser, faUserShield, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { User } from '../shared/model/User';\nimport { ApiHelper } from '../shared/api/api.helper';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  userData: User;\n  faUser = faUser;\n  faUserShield = faUserShield;\n  faSignOutAlt = faSignOutAlt;\n\n  constructor(private _apiHelper: ApiHelper, private _messageService: MessageService, private _router: Router) { }\n\n  ngOnInit(): void {\n    this._apiHelper.userData.subscribe((response: User) => {\n      this.userData = response;\n      if (this.userData.isAdmin) {\n        this._messageService.add({severity:'success', summary:`Welcome ${response.name}`, detail:'Admin features are activated for you'});\n      } else if (this.userData.name) {\n        this._messageService.add({severity:'success', summary:`Welcome ${response.name}`, detail:''});\n      }\n    });\n  }\n\n  navigateToAdminPage() {\n    this._router.navigate(['admin']);\n  }\n\n  onSignOut() {\n    this._apiHelper.userData.next({});\n    this._apiHelper.loginRegister.next('login');\n    this._router.navigate(['']);\n    this._messageService.add({ severity: 'success', summary: 'Logged out successfully', detail: '' })\n  }\n}\n","<nav class=\"navbar px-4\">\n  <div class=\"col-sm-6\">\n    <a class=\"navbar-brand\">My Admin User</a>\n  </div>\n  <div class=\"col-sm-6 info-wrapper\">\n    <div *ngIf=\"userData?.name && userData?.isAdmin\" class=\"option-admin-area\" (click)=\"navigateToAdminPage()\">Admin\n      Area</div>\n    <fa-icon *ngIf=\"userData?.name && userData?.isAdmin\" class=\"user-icon\" [icon]=\"faUserShield\"\n      pTooltip=\"{{userData?.name}}\"></fa-icon>\n    <fa-icon *ngIf=\"userData?.name && !userData?.isAdmin\" class=\"user-icon\" [icon]=\"faUser\"\n      pTooltip=\"{{userData?.name}}\"></fa-icon>\n    <fa-icon *ngIf=\"userData?.name\" class=\"user-icon\" [icon]=\"faSignOutAlt\" pTooltip=\"Logout\" (click)=\"onSignOut()\"></fa-icon>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { ApiHelper } from '../shared/api/api.helper';\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss']\n})\nexport class LoginRegisterComponent implements OnInit {\n\n  loginRegister: string;\n\n  constructor(private _apiHelper: ApiHelper) { }\n\n  ngOnInit(): void {\n    this._apiHelper.loginRegister.subscribe(response => {\n      this.loginRegister = response;\n    })\n  }\n\n}\n","<div class=\"container mt-3\">\n  <div class=\"col-sm-6 offset-sm-3\">\n    <div class=\"text-center mb-5\">\n      <h4>Login/Register to continue</h4>\n    </div>\n    <app-login *ngIf=\"loginRegister === 'login'\"></app-login>\n    <app-register *ngIf=\"loginRegister === 'register'\"></app-register>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../shared/model/User';\nimport { ApiServices } from '../../shared/api/api.services';\nimport { ApiHelper } from '../../shared/api/api.helper';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  showError: boolean;\n  errorMessage: string;\n\n  constructor(private _apiService: ApiServices, private _apiHelper: ApiHelper, private _router: Router, private _messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')])),\n      password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(5)]))\n    })\n  }\n\n  onLogin() {\n    this._apiHelper.isLoading.next(true);\n    this._apiService.loginUser(this.loginForm.value)\n      .subscribe((response: User) => {\n        this._apiHelper.isLoading.next(false);\n        if (response._id) {\n          this._apiHelper.userData.next(response);\n          this._router.navigate(['/dashboard/section']);\n        }\n      }, (err) => {\n        this._apiHelper.isLoading.next(false);\n        this._messageService.add({severity:'error', summary:err.error.error, detail:''});\n        this.clearForm();\n      });\n  }\n\n  clearForm() {\n    this.loginForm.reset();\n  }\n\n  goToRegister() {\n    this._apiHelper.loginRegister.next('register');\n  }\n}\n","<form [formGroup]=\"loginForm\">\n  <div class=\"form-group\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" class=\"form-control\" placeholder=\"Enter email...\" formControlName=\"email\"\n      [ngClass]=\"{'invalid-control': loginForm.get('email')?.touched && loginForm.get('email')?.invalid}\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" class=\"form-control\" placeholder=\"Enter password...\" formControlName=\"password\"\n      [ngClass]=\"{'invalid-control': loginForm.get('password')?.touched && loginForm.get('password')?.invalid}\">\n  </div>\n  <div class=\"btn-wrapper\">\n    <div class=\"col-sm-8 px-0\">\n      <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\" (click)=\"onLogin()\">Login</button>\n      <button type=\"button\" class=\"btn btn-secondary ml-2\" (click)=\"clearForm()\">Cancel</button>\n    </div>\n    <div class=\"col-sm-4 px-0 text-right\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToRegister()\">Register</button>\n    </div>\n  </div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { User } from '../../shared/model/User';\nimport { ApiServices } from '../../shared/api/api.services';\nimport { ApiHelper } from '../../shared/api/api.helper';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  showError: boolean;\n  errorMessage: string;\n\n  constructor(private _apiService: ApiServices, private _apiHelper: ApiHelper, private _router: Router, private _messageService: MessageService) { }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      username: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]{2,}$')])),\n      password: new FormControl('', Validators.compose([Validators.required, Validators.minLength(5)]))\n    })\n  }\n\n  onRegister() {\n    this._apiService.registerUser(this.registerForm.value)\n      .subscribe((response: User) => {\n        console.log(response);\n        if (response._id) {\n          this._apiHelper.userData.next(response);\n          this._router.navigate(['/dashboard/section']);\n        }\n      }, (err) => {\n        this._messageService.add({severity:'error', summary:err.error.error, detail:''});\n        this.clearForm();\n      });\n  }\n\n  clearForm() {\n    this.registerForm.reset();\n  }\n\n  goToLogin() {\n    this._apiHelper.loginRegister.next('login');\n  }\n}\n","<form [formGroup]=\"registerForm\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" class=\"form-control\" placeholder=\"Enter username...\" formControlName=\"username\"\n      [ngClass]=\"{'invalid-control': registerForm.get('username')?.touched && registerForm.get('username')?.invalid}\">\n    <span *ngIf=\"registerForm.get('username')?.touched && registerForm.get('username')?.invalid\" class=\"invalid-msg\">\n      Username is required\n    </span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"email\">Email</label>\n    <input type=\"email\" class=\"form-control\" placeholder=\"Enter email...\" formControlName=\"email\"\n      [ngClass]=\"{'invalid-control': registerForm.get('email')?.touched && registerForm.get('email')?.invalid}\">\n    <span *ngIf=\"registerForm.get('email')?.touched && registerForm.get('email')?.invalid\" class=\"invalid-msg\">\n      Valid email address is required</span>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" class=\"form-control\" placeholder=\"Enter password...\" formControlName=\"password\"\n      [ngClass]=\"{'invalid-control': registerForm.get('password')?.touched && registerForm.get('password')?.invalid}\">\n    <span *ngIf=\"registerForm.get('password')?.touched && registerForm.get('password')?.invalid\" class=\"invalid-msg\">\n      Password must be atleast 5 characters long</span>\n  </div>\n  <div class=\"btn-wrapper\">\n    <div class=\"col-sm-8 px-0\">\n      <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\" (click)=\"onRegister()\">Register</button>\n      <button type=\"button\" class=\"btn btn-secondary ml-2\" (click)=\"clearForm()\">Cancel</button>\n    </div>\n    <div class=\"col-sm-4 px-0 text-right\">\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"goToLogin()\">Login</button>\n    </div>\n  </div>\n</form>\n<div *ngIf=\"showError\" class=\"alert alert-danger mt-3\" role=\"alert\">\n  {{errorMessage}}\n</div>","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport class ApiHelper {\r\n  userData: BehaviorSubject<any> = new BehaviorSubject<any>({});\r\n  loginRegister: BehaviorSubject<string> = new BehaviorSubject<string>('login');\r\n  isLoading: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  sections = [\r\n    { title: 'Anime', body: 'Lorem ipsum dolor sit, amet consectetur adipisicing elit. Praesentium officia in corporis excepturi necessitatibus tempora reiciendis saepe blanditiis voluptate iure.', url: 'anime' },\r\n    { title: 'Games', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Necessitatibus, id vel officiis harum voluptatibus velit veniam adipisci? Id, dolorem cum.', url: 'games' },\r\n    { title: 'Music', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'music' },\r\n    { title: 'Books', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'books' },\r\n    { title: 'Movies', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'movies' },\r\n    { title: 'Others', body: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae vero laudantium nostrum et debitis rerum esse voluptas incidunt quo dolore?', url: 'others' },\r\n  ];\r\n\r\n  roles = [\r\n    { label: 'anime', value: 'anime' },\r\n    { label: 'games', value: 'games' },\r\n    { label: 'music', value: 'music' },\r\n    { label: 'books', value: 'books' },\r\n    { label: 'movies', value: 'movies' },\r\n    { label: 'others', value: 'others' },\r\n  ];\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ApiServices {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  registerUser(userData) {\r\n    return this.http.post('/user/register', userData);\r\n  }\r\n\r\n  loginUser(userData) {\r\n    return this.http.post('/user/login', userData);\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get('/user/all-users');\r\n  }\r\n\r\n  updateUserRoles(data) {\r\n    return this.http.post('/user/add-user-role', data);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { User } from '../model/User';\r\nimport { ApiHelper } from '../api/api.helper';\r\n\r\n@Injectable()\r\nexport class AdminGuardService implements CanActivate {\r\n  userData: User;\r\n\r\n  constructor(private _router: Router, private _apiHelper: ApiHelper, private messageService: MessageService) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    this._apiHelper.userData.subscribe(response => {\r\n      this.userData = response;\r\n    }, (err) => {\r\n      this._router.navigate(['']);\r\n      this.messageService.add({severity:'error', summary:'Access Denied', detail:'Please login again.'})\r\n    })\r\n    \r\n    if (this.userData.isAdmin) {\r\n      return true;\r\n    }\r\n    this._router.navigate(['']);\r\n    this.messageService.add({severity:'error', summary:'Access Denied', detail:'Please login again.'})\r\n    return false;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { User } from '../model/User';\r\nimport { ApiHelper } from '../api/api.helper';\r\n\r\n@Injectable()\r\nexport class AuthGuardService implements CanActivate {\r\n  userData: User;\r\n\r\n  constructor(private _router: Router, private _apiHelper: ApiHelper, private messageService: MessageService) {\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    this._apiHelper.userData.subscribe(response => {\r\n      this.userData = response;\r\n    }, (err) => {\r\n      this.accessDenied();\r\n    })\r\n\r\n    if (this.userData.name) {\r\n      return true;\r\n    }\r\n    this.accessDenied();\r\n    return false;\r\n  }\r\n\r\n  accessDenied(): void {\r\n    this._router.navigate(['']);\r\n    this.messageService.add({ severity: 'error', summary: 'Access Denied', detail: 'Please login again.' })\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { MessageService } from 'primeng/api';\r\n\r\nimport { User } from '../model/User';\r\nimport { ApiHelper } from '../api/api.helper';\r\n\r\n@Injectable()\r\nexport class SectionsGuardService implements CanActivate {\r\n  userData: User;\r\n\r\n  constructor(private _router: Router, private _apiHelper: ApiHelper, private messageService: MessageService) {\r\n  }\r\n\r\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    this._apiHelper.userData.subscribe(response => {\r\n      this.userData = response;\r\n    }, (err) => {\r\n      this._router.navigate(['']);\r\n      this.accessDenied();\r\n    });\r\n\r\n    if (this.userData.isAdmin) {\r\n      return true;\r\n    } else if (this.userData.name) {\r\n      const isThere = this.userData.roles.find(role => _route.routeConfig.path === role);\r\n      if (isThere) {\r\n        return true;\r\n      }\r\n      this.accessDenied();\r\n      return false;\r\n    }\r\n    this.accessDenied();\r\n    return false;\r\n  }\r\n\r\n  accessDenied() {\r\n    this.messageService.add({ severity: 'error', summary: 'Access Denied', detail: 'Please login again.' })\r\n  }\r\n}","export const environment = {\n  production: false,\n  baseUri: 'http://localhost:3000',\n};","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}